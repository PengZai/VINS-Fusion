%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 0          
num_of_cam: 2 

imu_topic: "/imu/data"
image0_topic: "/zed2i/zed_node/left_raw/image_raw_color"
image1_topic: "/zed2i/zed_node/left_raw/image_raw_color"
output_path: "/root/catkin_ws/output"

cam0_calib: "zed_left_rgb_1080p.yaml"
cam1_calib: "zed_right_rgb_1080p.yaml"
image_width: 1920
image_height: 1080
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [1,0,0,0,
          0,1,0,0,
          0,0,1,0,
          0.0,0.0,0.0,1.0]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.99996212, -0.00133436,  0.00860078, -0.119729,
          0.00134459,  0.99999839, -0.00118413, -0.000135398,
          -0.00859918,  0.00119565,  0.99996231, 0.000681149,
          0.0,0.0,0.0,1.0]

#Multiple thread support
multiple_thread: 1        # origin 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 0                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time origin 0.04
max_num_iterations: 8  # max solver itrations, to guarantee real time origin 8
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       
# The raw calibrated imu intrinsics only take stationary properties into account, to conduct 
# real-world testing, some other processes will also happen, including temperature drift, motional effects, etc.
# So we recommend to increase the white_noise to several to 10x to relax these errors.
# Directly try the following params that we have successfully tested.
acc_n: 0.01          # accelerometer measurement noise standard deviation. 
gyr_n: 0.002         # gyroscope measurement noise standard deviation.     
acc_w: 0.00008        # accelerometer bias random work noise standard deviation.  
gyr_w: 0.00003       # gyroscope bias random work noise standard deviation.
g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/root/catkin_ws/output/pose_graph" # save and load path
save_image: 1                  # save image in pose graph for visualization prupose; you can close this function by setting 0 
